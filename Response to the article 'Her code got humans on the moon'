
I'm writing this paragraph especially in response to the part where people, especially leaders assumed that a mistake could never occur.
I think that so far in coding we will encounter this many times. An algorithm we designed was working perfectly,
but failed only in a few circumstances because what we thought people would never do they actually did. When working with people,
there is no such thing as never, or at least we should take into account that what we don't expect people to do, they somehow end up doing.
The point is, that we should not trust perfection or someone's perfect abilities, we should not take pride blindly in too many things,
because then we can encounter the "unexpected" we did not at all desire. People will behave in absurd and unexpected ways around a machine,
and our own design skills aren't perfect. I also think that learning how machine and software works really happens through unexpected
problems and we have no idea why they occurred. And because some of these problems cannot be solved through trial and error, it is our
own thinking around human-computer interaction, sometimes the paradigm of design and interactive media, that needs or need to change
entirely. Concepts and algorithms need to be revised. Similarly, the situation with women in tech is changing and needs to continue
to change because the old paradigm, that is entirely philosophyical and not at all tech related (that women are not capable and shouldn't
engage in as much technical work as men) is outdated and allows more mistakes to happen in less accurate outcomes. After all, more brains
can work more and at a faster pace than fewer brains. When someone has a good idea, the idea should not be discarded because of that
person's personal attributes. Similarly, the historic way of thinking about technology and human genius needs to continue changing.
We learn more as we accept that we're incomplete, our work imperfect, and our motivations questionable, and critique our work thoroughly.
